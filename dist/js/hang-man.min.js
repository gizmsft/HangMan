!function(h){"use strict";const a="hangMan";var k={code:"",riddle:{hint:"",fragments:[],revealed:[]},allowedTries:5,events:{onCharacterGuessed:function(e){console.log("on character guessed")},onCompleted:function(){console.log("on game completed")},onGameLost:function(){console.log("on game lost")}},callbacks:{renderTriesLabel:function(e){return"Tries: "+e.tries+"/"+e.allowedTries}},css:{gameMainContainerClass:"game-main-container",hintContainerClass:"game-hint-container",gamePanelContainerClass:"game-panel-container",gamePanelClass:"game-panel",gamePanelRowClass:"game-panel-row",gamePanelCellClass:"game-panel-cell",gameTriesContainerClass:"game-tries-container",wrongGuessContainerClass:"wrong-guess-container",wrongGuessPanelClass:"wrong-guess-panel",wrongGuessPanelCellClass:"wrong-guess-panel-cell",keyboardContainerClass:"keyboard-container",keyboardPanelClass:"keyboard-panel",keyboardPanelRowClass:"keyboard-panel-row",keyboardPanelCellClass:"keyboard-panel-cell",keyboardPanelCellWrongClass:"keyboard-panel-cell-wrong",keyboardPanelCellRightClass:"keyboard-panel-cell-right"},keyboardKeys:[["Q","W","E","R","T","Y","U","I","O","P"],["A","S","D","F","G","H","J","K","L"],["Z","X","C","V","B","N","M"]]};function n(e,s){const a=e instanceof jQuery?e:h(e);var i={settings:null,completed:!1},e=(i.settings=h.extend(!0,{},k,s),h("<div class='"+i.settings.css.gameMainContainerClass+"'></div>")),s=h("<div class='"+i.settings.css.hintContainerClass+"'></div>").appendTo(e),n=h("<div class='"+i.settings.css.gamePanelContainerClass+"'></div>").appendTo(e),t=h("<div class='"+i.settings.css.gameTriesContainerClass+"'></div>").appendTo(e),l=h("<div class='"+i.settings.css.wrongGuessContainerClass+"'></div>").appendTo(e),r=h("<div class='"+i.settings.css.keyboardContainerClass+"'></div>").appendTo(e),o=(s.append(i.settings.riddle.hint),h("<div class='"+i.settings.css.gamePanelClass+"'></div>").appendTo(n)),d=h("<div class='"+i.settings.css.gamePanelRowClass+"'></div>"),c=h("<div class='"+i.settings.css.gamePanelCellClass+"'></div>"),g=(h.each(i.settings.riddle.fragments,function(e,s){for(var a=d.clone().appendTo(o),n=0;n<s.length;n++)c.clone().appendTo(a).data("x",n).data("y",e)}),h("<div class='"+i.settings.css.wrongGuessPanelClass+"'></div>").appendTo(l)),C=h("<div class='"+i.settings.css.wrongGuessPanelCellClass+"'></div>"),u=h("<div class='"+i.settings.css.keyboardPanelClass+"'></div>").appendTo(r),p=h("<div class='"+i.settings.css.keyboardPanelRowClass+"'></div>"),f=h("<button class='"+i.settings.css.keyboardPanelCellClass+"'></button>");function v(){i.completed=!0}function m(){return i.completed}return h.each(i.settings.keyboardKeys,function(e,s){var a=p.clone().appendTo(u);h.each(s,function(e,s){f.clone().appendTo(a).append(s).data("key",s).on("click",function(){var e;m()||((e=h(this)).hasClass(i.settings.css.keyboardPanelCellWrongClass)||e.hasClass(i.settings.css.keyboardPanelCellRightClass)||i.settings.events.onCharacterGuessed&&i.settings.events.onCharacterGuessed({char:e.data("key")}))})})}),t.empty().append(i.settings.callbacks.renderTriesLabel({tries:0,allowedTries:i.settings.allowedTries})),a.append(e),h(function(){h.each(i.settings.riddle.revealed,function(e,a){u.find("."+i.settings.css.keyboardPanelCellClass).filter(function(e,s){return h(s).data("key")==a}).trigger("click")})}),{update:function(n){var e,s;n.isValid?(h.each(n.correct,function(e,a){var s=o.find("."+i.settings.css.gamePanelCellClass).filter(function(e,s){return h(s).data("x")==a.x&&h(s).data("y")==a.y});s.data("key")||(s.data("key",n.char).append(a.alt),u.find("."+i.settings.css.keyboardPanelCellClass).filter(function(e,s){return h(s).data("key")==n.char}).addClass(i.settings.css.keyboardPanelCellRightClass))}),s=(e=o.find("."+i.settings.css.gamePanelCellClass)).filter(function(e,s){return!h(s).data("key")}),e.length&&!s.length&&(v(),i.settings.events.onCompleted&&setTimeout(i.settings.events.onCompleted,1))):(e=g.find("."+i.settings.css.wrongGuessPanelCellClass)).filter(function(e,s){return h(s).data("key")==n.char}).length||(C.clone().append(n.char).data("key",n.char).appendTo(g),u.find("."+i.settings.css.keyboardPanelCellClass).filter(function(e,s){return h(s).data("key")==n.char}).addClass(i.settings.css.keyboardPanelCellWrongClass),(s=g.find("."+i.settings.css.wrongGuessPanelCellClass)).length>=i.settings.allowedTries&&(v(),i.settings.events.onGameLost&&setTimeout(i.settings.events.onGameLost,1)),t.empty().append(i.settings.callbacks.renderTriesLabel({tries:s.length,allowedTries:i.settings.allowedTries})))},validateGuess:function(e,s){for(var a={char:e,isValid:!1,correct:[]},n=0;n<s.length;n++)for(var t=0;t<s[n].length;t++){var l=function(s,e){if(s==e)return s;var a=h.grep(i.settings.keyboardAlts,function(e){return e.key==s});if(a.length)for(var n=a[0].alts,t=0;t<n.length;t++)if(n[t]==e)return e;return null}(e,s[n][t]);l&&a.correct.push({char:e,alt:l,x:t,y:n})}return a.isValid=!!a.correct.length,a},markCompleted:v,isMarkedCompleted:m}}n.prototype={update:function(){update()},validateGuess:function(){validateGuess()},markCompleted:function(){markCompleted()},isMarkedCompleted:function(){return isMarkedCompleted()}},h.fn[a]=function(s){return this.each(function(){var e;h.data(this,a)||(e=new n(this,s),h.data(this,a,e))})}}(jQuery,(window,document));